<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:loc="clr-namespace:LinKu"
                    xmlns:Converters="clr-namespace:LinKu.Converters">

    <!--#region 程序文字-->
    <system:String x:Key="AppName">LinKu</system:String>
    <system:String x:Key="AppNameZh">邻游</system:String>
    <!--#endregion-->

    <!--#region 转换器-->
    <Converters:WatermarkConverter x:Key="WatermarkConverter"></Converters:WatermarkConverter>
    <!--#endregion-->

    <!--#region 主题色-->
    <!--主题文字颜色-->
    <SolidColorBrush x:Key="MainTextColor">#FFFFFFFF</SolidColorBrush>
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource MainTextColor}"></Setter>
    </Style>
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource MainTextColor}"></Setter>
    </Style>
    
    <!--主题文字颜色偏淡-->
    <SolidColorBrush x:Key="MainTextColor2">#FFC9C9C9</SolidColorBrush>
    <!--主题文字颜色偏淡-->
    <SolidColorBrush x:Key="MainTextColor3">#FF979797</SolidColorBrush>


    <SolidColorBrush x:Key="MainLeftColor">#FF979797</SolidColorBrush>


    <!--程序的主题色-->
    <SolidColorBrush x:Key="AppColor">#FFFFFFFF</SolidColorBrush>
    <SolidColorBrush x:Key="AppColorM">#338C8C8C</SolidColorBrush>
    <SolidColorBrush x:Key="AppColor1">#FF000000</SolidColorBrush>
    <SolidColorBrush x:Key="AppColorM1">#FF5E49F0</SolidColorBrush>
    <SolidColorBrush x:Key="TextColor">#FFFFFFFF</SolidColorBrush>
    <SolidColorBrush x:Key="TextColor3">#FF5C5C5C</SolidColorBrush>
    <SolidColorBrush x:Key="TextColor1">#FFFFFFFF</SolidColorBrush>
    <SolidColorBrush x:Key="TextColor12">#FF40415D</SolidColorBrush>
    <SolidColorBrush x:Key="TextColor2" Color="#FFD6D6D6"/>

    
    
    <!--窗体背景色-->
    <SolidColorBrush x:Key="MainBackColor">#FF181E40</SolidColorBrush>

    <!--左侧 菜单背景色-->
    <SolidColorBrush x:Key="MainLeftBackColor">#6622284A</SolidColorBrush>
    <Style x:Key="MainLeftBack" TargetType="Border">
        <!--灰色-->
        <Setter Property="Background" Value="#6622284A"></Setter>
        <!--透明-->
        <!--<Setter Property="Background" Value="Transparent"></Setter>-->
    </Style>
    <!--#endregion-->

    <!--#region 按钮配色-->
    <!--橙色-->
    <!--平常颜色-->
    <SolidColorBrush x:Key="MainColor1">#FFFF7F00</SolidColorBrush>
    <Color x:Key="MainColor">#FFFF7F00</Color>
    <!--悬浮-->
    <SolidColorBrush x:Key="MainColor2">#FFE07000</SolidColorBrush>
    <!--按下-->
    <SolidColorBrush x:Key="MainColor3">#FFF09132</SolidColorBrush>

    <CornerRadius x:Key="MainCornerRadius">0</CornerRadius>

    <!--绿色-->
    <!--平常颜色-->
    <!--
    <SolidColorBrush x:Key="MainColor1">#FF51AE42</SolidColorBrush>
    -->
    <!--悬浮-->
    <!--
    <SolidColorBrush x:Key="MainColor2">#FF4AC335</SolidColorBrush>
    -->
    <!--按下-->
    <!--
    <SolidColorBrush x:Key="MainColor3">#FF3EA42C</SolidColorBrush>-->
    <!--#endregion-->

    <!--#region 字体大小-->
    <system:Double x:Key="H1">18</system:Double>
    <Style x:Key="TextBlockH1" TargetType="TextBlock">
        <!--<Setter Property="Foreground" Value="#999999"></Setter>-->
        <Setter Property="Foreground" Value="{DynamicResource MainTextColor}"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
    </Style>
    <Style x:Key="TextBlockH2" TargetType="TextBlock">
        <!--<Setter Property="Foreground" Value="#999999"></Setter>-->
        <Setter Property="Foreground" Value="{DynamicResource MainTextColor}"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
    </Style>
    <!--#endregion-->

    <!--#region 字体-->
    <FontFamily x:Key="AppFont">/LinKu;component/Resources/#AR DESTINE</FontFamily>
    <FontFamily x:Key="MainFont23">/LinKu;component/Resources/#AR DESTINE</FontFamily>
    <FontFamily x:Key="MainFont3">/LinKu;component/Resources/#yeliqunjihejijianti</FontFamily>
    <FontFamily x:Key="MainFont">微软雅黑</FontFamily>
    <FontFamily x:Key="MainFont2">宋体</FontFamily>
    <FontFamily x:Key="IconFont">/LinKu;component/Resources/#iconfont</FontFamily>
    <!--#endregion-->

    <!--#region 输入框-->
    <Style x:Key="LoginInput" TargetType="TextBox">
        <!--<Setter Property="Foreground" Value="#999999"></Setter>-->
        <Setter Property="Foreground" Value="#333333"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Padding" Value="7,11,9,11"></Setter>
        <Setter Property="CaretBrush" Value="{DynamicResource MainTextColor}"></Setter>
    </Style>

    <Style x:Key="LoginPassWordInput" TargetType="PasswordBox">
        <!--<Setter Property="Foreground" Value="#999999"></Setter>-->
        <Setter Property="Foreground" Value="#333333"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Padding" Value="7,11,9,11"></Setter>
        <Setter Property="loc:PasswordBoxMonitor.IsMonitoring" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Cursor="IBeam" Name="Bd" Background="{TemplateBinding Background}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"/>
                            <Grid Background="Transparent" Visibility="Collapsed" Name="myStackPanel" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock SnapsToDevicePixels="True"  Grid.Column="1"  Foreground="White" 
                                           Text="密码" HorizontalAlignment="Stretch"/>
                                <!--PASSWORD-->
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="myStackPanel" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="loc:PasswordBoxMonitor.PasswordLength" Value="0">
                            <Setter Property="Visibility" TargetName="myStackPanel" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <VisualBrush  x:Key="LoginNameBrush" TileMode="None"  AlignmentX="Left" Stretch="None">
        <VisualBrush.Visual>
            <Grid Background="#00FFFFFF" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="9"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="1" FontSize="20"  Foreground="{StaticResource TextColor1}" Text="用户名"/>
                <!--USERNAME-->
            </Grid>
        </VisualBrush.Visual>
    </VisualBrush>
    <!--#endregion-->

    <!--#region 按钮-->

    <VisualBrush  x:Key="LoginSerachBrush" TileMode="None"  AlignmentX="Left" Stretch="None">
        <VisualBrush.Visual>
            <Grid Background="#00FFFFFF">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="1" FontSize="13" Foreground="Gray" Text="搜索..."/>
            </Grid>
        </VisualBrush.Visual>
    </VisualBrush>

    <Style x:Key="SerachButton" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="FontSize" Value="14px"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border  Name="bg" Width="30" BorderThickness="0,1,1,1" BorderBrush="Black"
                                 CornerRadius="0,5,5,0" Background="White"></Border>
                        <Label Foreground="Gray" Name="icon" Content="{TemplateBinding Tag}" 
                               FontFamily="{StaticResource IconFont}" VerticalAlignment="Center"
                               FontSize="17"></Label>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"  Value="True">
                            <Setter TargetName="icon" Property="Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--按钮:小圆角 实心按钮-->
    <Style x:Key="ButtonStyle1" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Width="{Binding ElementName=con,Path=ActualWidth}" Height="{Binding ElementName=con,Path=ActualHeight}" 
                                Background="Black" 
                                CornerRadius="{DynamicResource MainCornerRadius}" >
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0" Opacity="0.7" />
                            </Border.Effect>
                        </Border>
                        <Border UseLayoutRounding="True"  SnapsToDevicePixels="True"  Name="bg" Background="{DynamicResource MainColor1}"  
                                CornerRadius="{DynamicResource MainCornerRadius}" >
                            <Border Margin="1" Name="con">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"  Value="True">
                            <Setter TargetName="bg" Property="Background" Value="{DynamicResource MainColor3}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bg" Property="Background" Value="{DynamicResource MainColor2}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle4" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource MainTextColor}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Width="{Binding ElementName=con,Path=ActualWidth}" Height="{Binding ElementName=con,Path=ActualHeight}" 
                                Background="Black" 
                                CornerRadius="0" >
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0" Opacity="0.7" />
                            </Border.Effect>
                        </Border>
                        <Border UseLayoutRounding="True"  SnapsToDevicePixels="True"  Name="bg" Background="{DynamicResource MainColor1}"  
                                CornerRadius="0" >
                            <Border Margin="1" Name="con">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"  Value="True">
                            <Setter TargetName="bg" Property="Background" Value="{DynamicResource MainColor3}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bg" Property="Background" Value="{DynamicResource MainColor2}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle2" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Foreground" Value="#FFB9BFC1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Name="bg" Padding="5,0,5,0" CornerRadius="5" BorderThickness="1" BorderBrush="{DynamicResource MainTextColor}" Opacity="0.6" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"  Value="True">
                            <Setter TargetName="bg" Property="Background" Value="#4CFFFFFF"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bg" Property="Background" Value="#66FFFFFF"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle3" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Label Foreground="White" Name="icon" Content="{TemplateBinding Tag}" 
                               FontFamily="{StaticResource IconFont}" VerticalAlignment="Center"
                               FontSize="14"></Label>
                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="0,1,0,0"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"  Value="True">
                            <Setter TargetName="icon" Property="Foreground" Value="#4CFFFFFF"/>
                            <Setter Property="Foreground" Value="#4CFFFFFF"/>
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bg" Property="Background" Value="#66FFFFFF"/>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region 选择框-->
    <Style x:Key="CheckBox1" TargetType="CheckBox">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="2" ShadowDepth="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Foreground" Value="#FFB9BFC1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Label Foreground="{DynamicResource MainTextColor}" 
                               Name="icon" Content="&#xe728;" 
                               FontFamily="{StaticResource IconFont}" 
                               FontSize="28" Margin="0,4,0,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Center"></Label>
                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"  Value="True">
                            <Setter TargetName="icon" Property="Content" Value="&#xe655;"/>
                            <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource MainColor1}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region 下拉框-->
    <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid  SnapsToDevicePixels="True">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock Margin="10,0,0,1" FontSize="15"  Grid.Column="0" 
                                  Background="Transparent" 
                                  Text="{TemplateBinding Content}"  SnapsToDevicePixels="True"
                                  HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                            <Border BorderThickness="1" BorderBrush="{DynamicResource MainTextColor}" Opacity="0.6" Margin="5,2,0,0" >
                                <Label Foreground="White" Name="icon" Content="&#xe60a;" 
                               FontFamily="{StaticResource IconFont}"  
                                       HorizontalContentAlignment="Center" 
                                       HorizontalAlignment="Center" 
                                       VerticalAlignment="Center" VerticalContentAlignment="Center"
                               FontSize="6" ></Label>
                            </Border>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBox" x:Key="ComboBoxStyle">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--ComBoxItem-->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="22"></Setter>
                    <Setter Property="MinWidth" Value="60"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="Back" Background="Transparent" >
                                    <TextBlock Foreground="Black" Margin="5,3,0,3" Text="{TemplateBinding Content}"
                                               VerticalAlignment="Center" HorizontalAlignment="Left"></TextBlock>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Back" Property="Background">
                                            <Setter.Value>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="White" Offset="0"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                    <GradientStop Color="#FF878787" Offset="0.515"/>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="LightGray"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid Background="Transparent">
                        <ToggleButton  Style="{StaticResource ComboxStyleBtn}"  Content="{TemplateBinding Text}" Tag="{TemplateBinding Tag}"
                                               IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                               ClickMode="Press">
                        </ToggleButton>
                        <Popup Margin="0,0,0,1" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" 
                               x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide" VerticalOffset="3">
                            <Border Background="White"  MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                    MinWidth="{TemplateBinding ActualWidth}" 
                                    x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                </Border.Effect>
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Tab容器-->
    <Style x:Key="LeftTabControl" TargetType="TabControl" 
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
           xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="TextElement.Foreground">
            <Setter.Value>
                <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Padding">
            <Setter.Value>
                <Thickness>0</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderThickness">
            <Setter.Value>
                <Thickness>0</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderBrush">
            <Setter.Value>
                <SolidColorBrush>#FF8C8E94</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
            <Setter.Value>
                <SolidColorBrush>#FFF9F9F9</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.HorizontalContentAlignment">
            <Setter.Value>
                <x:Static Member="HorizontalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.VerticalContentAlignment">
            <Setter.Value>
                <x:Static Member="VerticalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60" Name="RowDefinition0" />
                            <RowDefinition Height="*" Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Column="0" Grid.Row="0" Margin="0,180,0,0">
                            <ItemsPresenter Name="HeaderPanel" Margin="-2,0,0,0" 
                                            Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"  
                                            VerticalAlignment="Top" />
                        </Grid>
                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}"
                                Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="0" Grid.Row="1">
                            <ContentPresenter Content="{TemplateBinding TabControl.SelectedContent}"
                                              ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}"
                                              ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}" 
                                              ContentSource="SelectedContent" Name="PART_SelectedContentHost" 
                                              Margin="{TemplateBinding Control.Padding}"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Row" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                                <Setter.Value>
                                    <GridLength>Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <Thickness>0,0,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Bottom" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Row" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
                                <Setter.Value>
                                    <GridLength>Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                                <Setter.Value>
                                    <GridLength>0</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <Thickness>0,0,0,20</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Left" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Row" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
                                <Setter.Value>
                                    <GridLength>Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                                <Setter.Value>
                                    <GridLength>0</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <Thickness>0,0,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Right" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FF8C8C8C"/>
    </Style>
    <Style x:Key="LeftTabItem" TargetType="TabItem" >
        <Setter Property="Width" Value="180"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Height" Value="38"></Setter>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type TabItem}">
                    <Grid Background="#00000000" Name="bg">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="y" Margin="0,8,0,8" BorderThickness="3,0,0,0" Visibility="Hidden" BorderBrush="{DynamicResource MainColor1}" Grid.Column="0"></Border>
                        <StackPanel Orientation="Horizontal" x:Name="x" Grid.Column="1">
                            <TextBlock x:Name="Icon" Text="{TemplateBinding Tag}" FontFamily="/LinKu;component/Resources/#iconfont" FontSize="20" 
                                       HorizontalAlignment="Center" SnapsToDevicePixels="True" Opacity="0.7"
                                       VerticalAlignment="Center" Margin="20,0,5,0"></TextBlock>
                            <ContentPresenter x:Name="Content"  
                                               ContentSource="Header" HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" Margin="8,3,8,6">
                            </ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" >
                            <Setter Property="Opacity" TargetName="Icon" Value="1"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" TargetName="Icon" Value="{DynamicResource MainColor2}"></Setter>
                            <Setter Property="Background" TargetName="bg" Value="#33000000"></Setter>
                            <Setter Property="Visibility" TargetName="y" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="Width" Value="60">
                            <Setter Property="Visibility" TargetName="Content" Value="Hidden"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter  Margin="0"  Content="{TemplateBinding Content}"  >
                    </ContentPresenter>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Foreground" Value="{StaticResource AppColor}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DMTopTabItemLeft" TargetType="TabItem" >
        <Setter Property="Width" Value="110"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Height" Value="28"></Setter>
        <Setter Property="Foreground" Value="#FF888888"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type TabItem}">
                    <Grid Background="Transparent">
                        <Border  x:Name="x"  CornerRadius="5,0,0,5"  BorderBrush="#FFE5E5E5"
                            BorderThickness="1,1,0,1">
                            <TextBlock x:Name="Content" Text="{TemplateBinding Header}" 
                            HorizontalAlignment="Center"  Margin="5,0,0,0"
                            VerticalAlignment="Center" ></TextBlock>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" >
                            <Setter Property="Background" TargetName="x" Value="#FFF5F5F7"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="BorderThickness" TargetName="x" Value="0"></Setter>
                            <Setter Property="Foreground" TargetName="Content" Value="#FFE5E5E7"></Setter>
                            <Setter Property="Background" TargetName="x" Value="#FF7C7D85"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter  Margin="0"  Content="{TemplateBinding Content}"  >
                    </ContentPresenter>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DMTopTabItemRight" TargetType="TabItem" >
        <Setter Property="Width" Value="110"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Height" Value="28"></Setter>
        <Setter Property="Foreground" Value="#FF888888"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type TabItem}">
                    <Grid Background="Transparent">
                        <Border  x:Name="x"  CornerRadius="0,5,5,0"  BorderBrush="#FFE5E5E5"
                            BorderThickness="1,1,1,1">
                            <TextBlock x:Name="Content" Text="{TemplateBinding Header}" 
                            HorizontalAlignment="Center"  Margin="5,0,0,0"
                            VerticalAlignment="Center" ></TextBlock>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" >
                            <Setter Property="Background" TargetName="x" Value="#FFF5F5F7"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" TargetName="Content" Value="#FFE5E5E7"></Setter>
                            <Setter Property="Background" TargetName="x" Value="#FF7C7D85"></Setter>
                            <Setter Property="BorderThickness" TargetName="x" Value="0"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter  Margin="0"  Content="{TemplateBinding Content}"  >
                    </ContentPresenter>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DMTopTabItem" TargetType="TabItem" >
        <Setter Property="Width" Value="110"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Height" Value="28"></Setter>
        <Setter Property="Foreground" Value="#FF888888"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type TabItem}">
                    <Grid  Background="Transparent" >
                        <Border  x:Name="x" BorderBrush="#FFE5E5E5"
                                 BorderThickness="1,1,0,1">
                            <TextBlock x:Name="Content" Text="{TemplateBinding Header}" 
                            HorizontalAlignment="Center"  Margin="5,0,0,0"
                            VerticalAlignment="Center" ></TextBlock>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" >
                            <Setter Property="Background" TargetName="x" Value="#FFF5F5F7"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" TargetName="Content" Value="#FFE5E5E7"></Setter>
                            <Setter Property="Background" TargetName="x" Value="#FF7C7D85"></Setter>
                            <Setter Property="BorderThickness" TargetName="x" Value="0"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter  Margin="0"  Content="{TemplateBinding Content}"  >
                    </ContentPresenter>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

</ResourceDictionary>